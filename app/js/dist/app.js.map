{"version":3,"sources":["app.js"],"names":["getData","ipAddress","fetch","response","json","data","source","document","querySelector","innerHTML","template","Handlebars","compile","target","longitude","location","latitude","resetListDiv","updateMap","createMap","displayError","userInput","ValidIpAddressRegex","element","message","match","textContent","err","mymap","L","map","setView","marker","addTo","tileLayer","attribution","maxZoom","id","tileSize","zoomOffset","accessToken","container","DomUtil","get","_leaflet_id","resetMap","searchedApi","remove","addEventListener","e","preventDefault","value"],"mappings":"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","sourcesContent":["async function getData(ipAddress) {\n    let response = await fetch(`https://geo.ipify.org/api/v1?apiKey=at_N7bI2kkvX3c6QIv1J3m6dgvIbJugA&ipAddress=${ipAddress}`)\n    let data = await response.json()\n    const source = document.querySelector('#IPTemplate').innerHTML\n    const template = Handlebars.compile(source)\n    const target = document.querySelector('#IP')\n    const longitude = data.location['lng']\n    const latitude = data.location['lat']\n    target.innerHTML += template(data)\n    resetListDiv()\n    updateMap()\n    createMap(latitude, longitude)\n}\n\nlet displayError = (userInput) => {\n    let ValidIpAddressRegex = \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$\";\n\n    try {\n        if(userInput === \"\" ){\n            throw {\n                element: document.querySelector('.err'),\n                message: 'This field is required! '\n            }\n        } else {\n            if(!(userInput.match(ValidIpAddressRegex))){\n                throw {\n                    element: document.querySelector('.err'),\n                    message: 'This is not a valid IP Address'\n                }\n            } else {\n                document.querySelector('.err').textContent = \"\";\n                getData(userInput)\n            }\n        }\n    } catch (err) {\n        err.element.textContent = err.message;\n    }\n}\n\nlet createMap = (latitude,longitude) =>\n\n{\n    let mymap = L.map('mapid').setView([latitude, longitude], 13);\n    var marker = L.marker([latitude, longitude]).addTo(mymap);\n\n    L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoiYWxpbmExMjM0IiwiYSI6ImNrcWNmM3JqeDFpbHEzMm12NXZlc3RpcjQifQ.WcfTMJ27XhqE3msnoapplg', {\n        attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n        maxZoom: 18,\n        id: 'mapbox/streets-v11',\n        tileSize: 512,\n        zoomOffset: -1,\n        accessToken: 'okyour.mapbox.access.ten'\n    }).addTo(mymap);\n}\n\nlet updateMap = () =>\n{\n    let container = L.DomUtil.get('mapid');\n    if (container != null) {\n        container._leaflet_id = null;\n    }\n}\n\nlet resetMap = () => {\n    let mymap = L.map('mapid').setView([51.5074, 0.1278], 3);\n    L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoiYWxpbmExMjM0IiwiYSI6ImNrcWNmM3JqeDFpbHEzMm12NXZlc3RpcjQifQ.WcfTMJ27XhqE3msnoapplg', {\n        attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n        maxZoom: 18,\n        id: 'mapbox/streets-v11',\n        tileSize: 512,\n        zoomOffset: -1,\n        accessToken: 'pk.eyJ1IjoiYWxpbmExMjM0IiwiYSI6ImNrcWNmM3JqeDFpbHEzMm12NXZlc3RpcjQifQ.WcfTMJ27XhqE3msnoapplg'\n    }).addTo(mymap);\n}\n\nlet resetListDiv = () =>\n{\n    const searchedApi = document.querySelector('.list')\n    if (searchedApi) {\n        searchedApi.remove()\n    }\n}\n\ndocument.querySelector(\".button\").addEventListener(\"click\", e => {\n    e.preventDefault()\n    let userInput  = document.querySelector(\".form-control\").value;\n    displayError (userInput)\n})\n\nresetMap()"],"file":"app.js"}